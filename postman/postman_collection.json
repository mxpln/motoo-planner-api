{
	"info": {
		"_postman_id": "b46460cf-cdb4-41b7-9133-54d41565b106",
		"name": "TEST API MOTOO",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "USER",
			"item": [
				{
					"name": "should create a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"username\", pm.response.json().username);",
									"pm.environment.set(\"firstname\", pm.response.json().firstName);",
									"pm.environment.set(\"lastname\", pm.response.json().lastName);",
									"",
									"pm.test(\"Status test\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"password\",\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/users",
							"host": [
								"{{url}}api"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "should not create a existing user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function() {",
									"    pm.response.to.have.status(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{username}}\",\n    \"password\": \"password\",\n    \"firstName\": \"{{firstname}}\",\n    \"lastName\": \"{{lastname}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/users",
							"host": [
								"{{url}}api"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "should generate us a token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", pm.response.json().token);",
									"",
									"pm.test(\"Status test\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/login_check",
							"host": [
								"{{url}}api"
							],
							"path": [
								"login_check"
							]
						}
					},
					"response": []
				},
				{
					"name": "should not generate us a token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function() {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"mail non existant\",\n    \"password\": \"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/login_check",
							"host": [
								"{{url}}api"
							],
							"path": [
								"login_check"
							]
						}
					},
					"response": []
				},
				{
					"name": "should view a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}api/users/32",
							"host": [
								"{{url}}api"
							],
							"path": [
								"users",
								"32"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ROADBOOK",
			"item": [
				{
					"name": "should create a roadbook",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"lastRoadbook\", pm.response.json()['id']);",
									"",
									"pm.test(\"Status test\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Balade en Bretagne\",\n    \"description\": \"Je suis une description de test\",\n    \"tripStart\": \"2021-04-23T18:25:43.511Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/roadbooks",
							"host": [
								"{{url}}api"
							],
							"path": [
								"roadbooks"
							]
						}
					},
					"response": []
				},
				{
					"name": "should view a roadbook",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}api/roadbooks/22",
							"host": [
								"{{url}}api"
							],
							"path": [
								"roadbooks",
								"22"
							]
						}
					},
					"response": []
				},
				{
					"name": "should edit a roadbook",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Update name\", function() {",
									"    pm.expect(pm.response.json()['title']).to.eql(\"Modification\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Modification\",\n    \"description\": \"Je suis une description de test modifi√©\",\n    \"tripStart\": \"2022-02-01T11:11:11.511Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/roadbooks/{{lastRoadbook}}",
							"host": [
								"{{url}}api"
							],
							"path": [
								"roadbooks",
								"{{lastRoadbook}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "should delete a roadbook",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function() {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/roadbooks/{{lastRoadbook}}",
							"host": [
								"{{url}}api"
							],
							"path": [
								"roadbooks",
								"{{lastRoadbook}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "INFORMATION",
			"item": [
				{
					"name": "should create a information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"lastInformation\", pm.response.json()['id']);",
									"",
									"pm.test(\"Status test\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{$randomFirstName}}\",\n  \"phone\": \"0612345678\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/information",
							"host": [
								"{{url}}api"
							],
							"path": [
								"information"
							]
						}
					},
					"response": []
				},
				{
					"name": "should edit an information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Update name\", function() {",
									"    pm.expect(pm.response.json()['name']).to.eql(\"Modification\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Modification\",\n  \"phone\": \"0612345678\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/information/{{lastInformation}}",
							"host": [
								"{{url}}api"
							],
							"path": [
								"information",
								"{{lastInformation}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "should delete a information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function() {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/informations/{{lastInformation}}",
							"host": [
								"{{url}}api"
							],
							"path": [
								"informations",
								"{{lastInformation}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CHECKLIST",
			"item": [
				{
					"name": "should create a checklist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"lastChecklist\", pm.response.json()['id']);",
									"",
									"pm.test(\"Status test\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"task\": \"{{$randomLoremText}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/checklists",
							"host": [
								"{{url}}api"
							],
							"path": [
								"checklists"
							]
						}
					},
					"response": []
				},
				{
					"name": "should edit a checklist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Update name\", function() {",
									"    pm.expect(pm.response.json()['task']).to.eql(\"Modification\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"task\": \"Modification\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/checklists/{{lastChecklist}}",
							"host": [
								"{{url}}api"
							],
							"path": [
								"checklists",
								"{{lastChecklist}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "should delete a checklist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function() {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/checklists/{{lastChecklist}}",
							"host": [
								"{{url}}api"
							],
							"path": [
								"checklists",
								"{{lastChecklist}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "STEP",
			"item": [
				{
					"name": "should create a step",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"lastStep\", pm.response.json()['id']);",
									"",
									"pm.test(\"Status test\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"stepDate\": \"2021-04-23T18:25:43.511Z\",\n    \"stepLat\": {{$randomLatitude}},\n    \"stepLong\": {{$randomLongitude}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/steps",
							"host": [
								"{{url}}api"
							],
							"path": [
								"steps"
							]
						}
					},
					"response": []
				},
				{
					"name": "should edit a step",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Update name\", function() {",
									"    pm.expect(pm.response.json()['stepLat']).to.eql(-35.5074);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"stepDate\": \"2021-04-23T18:25:43.511Z\",\n    \"stepLat\": -35.5074,\n    \"stepLong\": {{$randomLongitude}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/steps/{{lastStep}}",
							"host": [
								"{{url}}api"
							],
							"path": [
								"steps",
								"{{lastStep}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "should delete a step",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function() {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/steps/{{lastStep}}",
							"host": [
								"{{url}}api"
							],
							"path": [
								"steps",
								"{{lastStep}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SUGGESTION",
			"item": [
				{
					"name": "should create a suggestion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"lastSuggestion\", pm.response.json()['id']);",
									"",
									"pm.test(\"Status test\", function() {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"address\": \"rue de la gare\",\n    \"city\": \"RENNES\",\n    \"zipCode\": \"35000\",\n    \"country\": \"France\",\n    \"phone\": \"0612345678\",\n    \"suggestLat\": 48.10934307730835,\n    \"suggestLong\": -1.6777017702023025\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/suggestions",
							"host": [
								"{{url}}api"
							],
							"path": [
								"suggestions"
							]
						}
					},
					"response": []
				},
				{
					"name": "should edit a suggestion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Update name\", function() {",
									"    pm.expect(pm.response.json()['address']).to.eql(\"rue de la super gare\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"address\": \"rue de la super gare\",\n    \"city\": \"RENNES\",\n    \"zipCode\": \"35000\",\n    \"country\": \"France\",\n    \"phone\": \"0612345678\",\n    \"suggestLat\": 48.10934307730835,\n    \"suggestLong\": -1.6777017702023025\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/suggestions/{{lastSuggestion}}",
							"host": [
								"{{url}}api"
							],
							"path": [
								"suggestions",
								"{{lastSuggestion}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "should delete a suggestion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function() {",
									"    pm.response.to.have.status(204);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}api/roadbooks/{{lastSuggestion}}",
							"host": [
								"{{url}}api"
							],
							"path": [
								"roadbooks",
								"{{lastSuggestion}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}